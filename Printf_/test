Manage any combination of the following flags: ’-0.’ and the field minimum width
under all conversions.
• Manage all the following flags: ’# +’ (Yes, one of them is a space)

man 3 printf
https://man7.org/linux/man-pages/man3/printf.3.html
#      The value should be converted to an "alternate form".  For o conversions, the first character of the output string is
              made zero (by prefixing a 0 if it was not zero already).
              For x and X conversions, a nonzero result has the string
              "0x" (or "0X" for X conversions) prepended to it.  For a,
              A, e, E, f, F, g, and G conversions, the result will
              always contain a decimal point, even if no digits follow
              it (normally, a decimal point appears in the results of
              those conversions only if a digit follows).  For g and G
              conversions, trailing zeros are not removed from the
              result as they would otherwise be.  For other conversions,
              the result is undefined.

       0      The value should be zero padded.  For d, i, o, u, x, X, a,
              A, e, E, f, F, g, and G conversions, the converted value
              is padded on the left with zeros rather than blanks.  If
              the 0 and - flags both appear, the 0 flag is ignored.  If
              a precision is given with a numeric conversion (d, i, o,
              u, x, and X), the 0 flag is ignored.  For other
              conversions, the behavior is undefined.

       -      The converted value is to be left adjusted on the field
              boundary.  (The default is right justification.)  The
              converted value is padded on the right with blanks, rather
              than on the left with blanks or zeros.  A - overrides a 0
              if both are given.

       ' '    (a space) A blank should be left before a positive number
              (or empty string) produced by a signed conversion.

       +      A sign (+ or -) should always be placed before a number
              produced by a signed conversion.  By default, a sign is
              used only for negative numbers.  A + overrides a space if
              both are used.

https://www.lix.polytechnique.fr/~liberti/public/computing/prog/c/C/FUNCTIONS/format.html#width

http://underpop.online.fr/j/java/help/using-flags-in-the-printf-format-string-formatted-output.html.gz
http://www.java2s.com/Tutorial/Java/0120__Development/FormattingNumericalData.htm
System.out.printf( "%+09d\n", 452 );
      System.out.printf( "%09d\n", 452 );
      System.out.printf( "% 9d\n", 452 );


+00000452
000000452
      452
System.out.printf("x = %2$f y = %1$g", x, y);
x = 33.750000 y = 27.5000


https://www.codingunit.com/printf-format-specifiers-format-conversions-and-formatted-output


/* Example for printf() */
#include <stdio.h>

int main(){
   printf ("Integers: %i %u \n", -3456, 3456);
   printf ("Characters: %c %c \n", 'z', 80);
   printf ("Decimals: %d %ld\n", 1997, 32000L);
   printf ("Some different radices: %d %x %o %#x %#o \n", 100, 100, 100, 100, 100);
   printf ("floats: %4.2f %+.0e %E \n", 3.14159, 3.14159, 3.14159);
   printf ("Preceding with empty spaces: %10d \n", 1997);
   printf ("Preceding with zeros: %010d \n", 1997);
   printf ("Width: %*d \n", 15, 140);
   printf ("%s \n", "Educative");
   return 0;
}


Integers: -3456 3456 
Characters: z P 
Decimals: 1997 32000
Some different radices: 100 64 144 0x64 0144 
floats: 3.14 +3e+00 3.141590E+00 
Preceding with empty spaces:       1997 
Preceding with zeros: 0000001997 
Width:             140 
Educative 

int a,b;
		float c,d;

		a = 15;
		b = a / 2;
		printf("%d\n",b);
		printf("%3d\n",b);
		printf("%03d\n",b);

		c = 15.3;
		d = c / 3;
		printf("%3.2f\n",d);

7
   7
007
5.10


int Fahrenheit;

	for (Fahrenheit = 0; Fahrenheit <= 300; Fahrenheit = Fahrenheit + 20)
		printf("%3d %06.3f\n", Fahrenheit, (5.0/9.0)*(Fahrenheit-32));


  0 -17.778
 20 -6.667
 40 04.444
 60 15.556
 80 26.667
100 37.778
120 48.889
140 60.000
160 71.111
180 82.222
200 93.333
220 104.444
240 115.556
260 126.667
280 137.778
300 148.889


printf("The color: %s\n", "blue");
	printf("First number: %d\n", 12345);
	printf("Second number: %04d\n", 25);
	printf("Third number: %i\n", 1234);
	printf("Float number: %3.2f\n", 3.14159);
	printf("Hexadecimal: %x\n", 255);
	printf("Octal: %o\n", 255);
	printf("Unsigned value: %u\n", 150);
	printf("Just print the percentage sign %%\n", 10);
}


The color: blue
First number: 12345
Second number: 0025
Third number: 1234
Float number: 3.14
Hexadecimal: ff
Octal: 377
Unsigned value: 150
Just print the percentage sign %

printf(":%s:\n", "Hello, world!");
	printf(":%15s:\n", "Hello, world!");
	printf(":%.10s:\n", "Hello, world!");
	printf(":%-10s:\n", "Hello, world!");
	printf(":%-15s:\n", "Hello, world!");
	printf(":%.15s:\n", "Hello, world!");
	printf(":%15.10s:\n", "Hello, world!");
	printf(":%-15.10s:\n", "Hello, world!");


:Hello, world!:
:  Hello, world!:
:Hello, wor:
:Hello, world!:
:Hello, world!  :
:Hello, world!:
:     Hello, wor:
:Hello, wor     :
